# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

# Grant minimal permissions: tests need only read, publish needs packages write
permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      # so pytest can import calc.py
      PYTHONPATH: ${{ github.workspace }}

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Python & pytest
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install pytest
        run: pip install pytest

      - name: Run tests
        run: pytest -q

      # 3. Build Docker image
      - name: Build Docker image
        run: docker build -t ci-cd-demo:${{ github.sha }} .

      # 4. Install Trivy CLI
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh \
            | sh -s -- -b /usr/local/bin

      # 5. Security scan (report only)
      - name: Report vulnerabilities with Trivy
        run: |
          trivy image \
            --severity HIGH,CRITICAL \
            --format table \
            ci-cd-demo:${{ github.sha }} || true

      # 6. Publish to GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag & push image
        run: |
          # push SHA-tagged image
          docker tag ci-cd-demo:${{ github.sha }} ghcr.io/kentex99/ci-cd-demo:${{ github.sha }}
          docker push ghcr.io/kentex99/ci-cd-demo:${{ github.sha }}
          # also push :latest
          docker tag ci-cd-demo:${{ github.sha }} ghcr.io/kentex99/ci-cd-demo:latest
          docker push ghcr.io/kentex99/ci-cd-demo:latest
